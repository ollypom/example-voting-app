version: "3"
services:

  redis:
    image: public.ecr.aws/bitnami/postgresql:9.6
#    networks:
#      - frontend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  db:
    image: public.ecr.aws/bitnami/redis:5.0-debian-10
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - db-data:/var/lib/postgresql/data
#    networks:
#      - backend

  vote:
    image: ${ECR_URL}:vote
    ports:
      - 5000:80
#    networks:
#      - frontend
    depends_on:
      - redis
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  result:
    image: ${ECR_URL}:result
    ports:
      - 5001:80
#    networks:
#      - backend
    depends_on:
      - db
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  worker:
    image: ${ECR_URL}:worker
#    networks:
#      - frontend
#      - backend
    depends_on:
      - db
      - redis
    deploy:
      replicas: 1
      labels: [APP=VOTING]
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

#networks:
#  frontend:
#  backend:

volumes:
  db-data:
